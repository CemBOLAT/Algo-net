spring.application.name=${SPRING_APPLICATION_NAME}

spring.datasource.url=${SPRING_DATASOURCE_URL}
spring.datasource.username=${SPRING_DATASOURCE_USERNAME}
spring.datasource.password=${SPRING_DATASOURCE_PASSWORD}
spring.datasource.driver-class-name=${SPRING_DATASOURCE_DRIVER_CLASS_NAME}

spring.jpa.hibernate.ddl-auto=${SPRING_JPA_HIBERNATE_DDL_AUTO}
spring.jpa.show-sql=${SPRING_JPA_SHOW_SQL}
spring.jpa.properties.hibernate.format_sql=${SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL}
spring.jpa.database-platform=${SPRING_JPA_DATABASE_PLATFORM}

# JWT settings: access 30 minutes, refresh 1 day
app.jwt.secret=change-this-secret-key-to-a-long-random-string-please-please-please-32-bytes-min
app.jwt.access-ttl-ms=1800000
app.jwt.refresh-ttl-ms=86400000

# Render uses PORT env; bind server.port to it (fallback 8080 locally)
server.port=${PORT:8080}

# CORS: set your frontend origin on Render, e.g. https://your-frontend.onrender.com
app.cors.allowed-origin=${CORS_ALLOWED_ORIGIN:http://localhost:8080}

# Mail (optional): set via env in production. For local testing, configure an SMTP service like Mailtrap.
spring.mail.host=${SPRING_MAIL_HOST}
spring.mail.port=${SPRING_MAIL_PORT}
spring.mail.username=${SPRING_MAIL_USERNAME}
spring.mail.password=${SPRING_MAIL_PASSWORD}
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

